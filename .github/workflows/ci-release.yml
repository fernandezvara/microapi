name: CI and Release

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:

permissions:
  contents: write
  packages: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Run go mod tidy
        run: go mod tidy

      - name: Run go generate
        run: go generate ./...

      - name: Run tests
        run: go test ./...

  build-dev:
    name: Build Dev Binaries
    # Run on non-tag pushes only, after tests pass
    if: github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Run go mod tidy
        run: go mod tidy

      - name: Run go generate
        run: go generate ./...

      - name: Prepare version
        id: prep
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          echo "VERSION=dev-${SHORT_SHA}" >> $GITHUB_ENV
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT

      - name: Build (${{ matrix.goos }}/${{ matrix.goarch }})
        env:
          CGO_ENABLED: "0"
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
            go build -trimpath -ldflags "-s -w -X main.Version=${VERSION}" \
            -o dist/micro-api-${VERSION}-${{ matrix.goos }}-${{ matrix.goarch }} \
            ./cmd/micro-api

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dev-binaries-${{ steps.prep.outputs.short_sha }}
          path: dist/*
          if-no-files-found: error

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
